---
const { title, texts } = Astro.props;
const textLength = "".concat(texts).length;
---

<div>
  <div class="bg-purple-700 rounded-t-2xl p-4">
    <div class="flex h-3 gap-x-2 pl-1">
      <div class="bg-red-400 rounded-full w-3 h-3"></div>
      <div class="bg-yellow-300 rounded-full w-3 h-3"></div>
      <div class="bg-green-300 rounded-full w-3 h-3"></div>
    </div>
  </div>
  <div class="bg-purple-400 rounded-b-2xl p-4 pt-0">
    <div class="pt-4 text-slate-800">
      <code><b>{title}</b></code>
    </div>
    <div class="py-2">
      <code>
        <span class="typewriter" style={`--n:${textLength}`}>
          &gt {
            texts.map((te: String) => (
              <>
                {te}
                <br />
              </>
            ))
          }
        </span>
      </code>
    </div>
  </div>
</div>

<style>
  /* https://dev.to/afif/a-multi-line-css-only-typewriter-effect-3op3 */
  /* --n must be the number of characters in the text*/
  .typewriter {
    /* font-family: monospace; */
    color: #0000;
    background: linear-gradient(-90deg, #222222 5px, #0000 0) 10px 0,
      linear-gradient(#222222 0 0) 0 0;
    background-size: calc(var(--n) * 1ch) 200%;
    -webkit-background-clip: padding-box, text;
    background-clip: padding-box, text;
    background-repeat: no-repeat;
    animation: b 0.7s infinite steps(1),
      t calc(var(--n) * 0.035s) steps(var(--n)) both;
    animation-delay: 1s;
  }
  @keyframes t {
    from {
      background-size: 0 200%;
    }
  }
  @keyframes b {
    50% {
      background-position: 0 -100%, 0 0;
    }
  }
</style>
